Import('*')
import os
import glob


time_period_months = [2, 3, 6]
rolling_window_list = [732, 1828]
data_source = ['#drive/output/scrape/link_committers_profile/committers_info_pr.csv',
               '#drive/output/scrape/link_committers_profile/committers_info_push.csv',
               '#drive/output/derived/data_export/df_pr.parquet',
               '#drive/output/derived/data_export/df_issue.parquet',
               '#drive/output/derived/data_export/df_pr_commits.parquet',
               '#drive/output/derived/data_export/df_push_commits.parquet',
               '#drive/output/scrape/link_issue_pull_request/linked_issue_to_pull_request.parquet']

for time_period in time_period_months:
    for rolling_window in rolling_window_list:
        outdir = "drive/output/derived/contributor_stats/contributor_data"
        target = [f'#{outdir}/major_contributors_major_months{time_period}_window{rolling_window}D_samplefull.parquet']
        source = ['#source/derived/contributor_stats/calculate_contributions.py'] + data_source
        env.Precious(env.Python(target, source, CL_ARG = f"{time_period} {rolling_window}"))

comment_col = 'comments'
issue_col = 'issue_comments'
commit_col = 'commits'
criteria_col_list = [comment_col, issue_col, commit_col]  
criteria_pct_list = [75, 90]
consecutive_periods_major_months_dict = {2: [3, 9, 18],
                                         3: [3, 6, 12],
                                         6: [3, 4, 5, 6]}

post_periods_major_months_dict = {2: [3, 6, 12],
                                  3: [2, 4, 8],
                                  6: [2, 4]}
decline_type_list = ['threshold_mean', 'threshold_gap_qty'] #['threshold_mean','threshold_pct']
decline_threshold_list = [0.2, 0.1, 0]
decline_gap_qty_list = [0, 5]


data_source = ['#drive/output/scrape/get_weekly_truck_factor/truckfactor.csv',
               '#drive/output/scrape/link_committers_profile/committers_info_pr.csv', 
               '#drive/output/scrape/link_committers_profile/committers_info_push.csv']

for time_period in time_period_months:
    for rolling_window in rolling_window_list:
        departed_file = f'departed_contributors_specification_summary_major_months{time_period}_window{rolling_window}D.csv'
        target = [f'#drive/output/derived/contributor_stats/departed_contributors/{departed_file}']
        
        source = ['#source/derived/contributor_stats/identify_departed_contributors.py'] + data_source
        indir = "drive/output/derived/contributor_stats/contributor_data"
        source.append(f'#{indir}/major_contributors_major_months{time_period}_window{rolling_window}D_samplefull.parquet')
        for criteria_col in criteria_col_list:
            for criteria_pct in criteria_pct_list:
                consecutive_periods_list = consecutive_periods_major_months_dict[time_period]
                post_period_length_list = post_periods_major_months_dict[time_period]

                for consecutive_periods in consecutive_periods_list:
                    for post_period_length in post_period_length_list:
                        if post_period_length <= consecutive_periods:
                            for decline_type in decline_type_list:
                                decline_stat_list = decline_threshold_list if decline_type == "threshold_mean" else decline_gap_qty_list
                                for decline_stat in decline_stat_list:

                                    filename = f'departed_contributors_major_months{time_period}_window{rolling_window}D_criteria_{criteria_col}_{criteria_pct}pct_consecutive{consecutive_periods}_post_period{post_period_length}_'
                                    decline_suffix = f"threshold_mean_{decline_stat}.parquet" if decline_type == 'threshold_mean' else f"threshold_gap_qty_{decline_stat}.parquet"
                                    file = filename + decline_suffix

                                    target.append(f'#drive/output/derived/contributor_stats/departed_contributors/{file}')
                                    if post_period_length == min(post_period_length_list) and decline_type == decline_type_list[0] and decline_stat == min(decline_stat_list):
                                        major_contributors_file = f'major_contributors_major_months{time_period}_window{rolling_window}D_criteria_{criteria_col}_{criteria_pct}pct_consecutive{consecutive_periods}.parquet'
                                        target.append(f'#drive/output/derived/contributor_stats/departed_contributors/{major_contributors_file}')
        env.Precious(env.Python(target, source, CL_ARG = f"{time_period} {rolling_window}"))

for time_period in time_period_months:
    for rolling_window in rolling_window_list:
        indir = 'drive/output/derived/contributor_stats/contributor_data'
        source = ['#source/derived/contributor_stats/identify_minor_contributors.py',
            f'#{indir}/major_contributors_major_months{time_period}_window{rolling_window}D_samplefull.parquet']
        
        for criteria_col in criteria_col_list:
            for criteria_pct in [25, 50]:
                outdir = 'drive/output/derived/contributor_stats/minor_contributors'
                target = [f'#{outdir}/minor_contributors_major_months{time_period}_window{rolling_window}D_criteria_{criteria_col}_{criteria_pct}pct.csv']
                
                env.Precious(env.Python(target, source, CL_ARG = f"{time_period} {rolling_window} {criteria_col} {criteria_pct}"))
